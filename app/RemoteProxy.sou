<?xml version="1.0" encoding="UTF-8"?>
<st-source>
  <package>
    <name>RemoteExamples</name>
  </package>

  <class name="RemoteProxy" namespace="RemoteExamples">
    <super>Object</super>
    <instVars>
      <var>remoteHost</var>
      <var>remotePort</var>
      <var>objectId</var>
    </instVars>
    <classVars/>
    <classInstVars/>
    <poolDictionaries/>
    <categories>
      <category>RemoteExamples</category>
    </categories>
  </class>

  <method>
    <selector>initializeWithHost:port:objectId:</selector>
    <category>initialization</category>
    <source>
initializeWithHost: host port: port objectId: objId
    remoteHost := host.
    remotePort := port.
    objectId := objId.
    ^ self
    </source>
  </method>

  <method>
    <selector>doesNotUnderstand:</selector>
    <category>message forwarding</category>
    <source>
doesNotUnderstand: aMessage
    | simulatedResponse |
    Transcript
        show: '--- Proxy Intercept ---'; cr;
        show: 'To host: ', remoteHost asString, ':', remotePort asString; cr;
        show: 'Object ID: ', objectId asString; cr;
        show: 'Message: ', aMessage printString; cr.
    simulatedResponse := 'Simulated remote result for: ', aMessage selector asString.
    ^ simulatedResponse
    </source>
  </method>

  <classMethod>
    <selector>proxyForHost:port:objectId:</selector>
    <category>instance creation</category>
    <source>
proxyForHost: host port: port objectId: objId
    ^ self new initializeWithHost: host port: port objectId: objId
    </source>
  </classMethod>
</st-source>
